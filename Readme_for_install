############################
### Check Computer Setup ###
############################
# Check Kernel version: v5.4.15 is required.
uname -r

# Optional: Install v5.4.15.
# List available kernels
sudo ubuntu-mainline-kernel.sh -i v5.4.15
# Get required kernel
sudo ubuntu-mainline-kernel.sh -r
# update grub
sudo update-grup
# reboot and count which option number kernel v5.4.15 is
# Change autostart to this number

# Check Ubuntu 18.04.LTS - bionic
lsb_release -a 

# ROS melodic needed
rosversion -d

############################
### Always update system ###
############################
sudo apt-get update
sudo apt-get upgrade

##################################
### Install OpenCV Version 3.4 ### 
##################################
# Follow instructions here:
# https://linuxize.com/post/how-to-install-opencv-on-ubuntu-18-04/

# 1. Install required dependencies
sudo apt install build-essential cmake git pkg-config libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev

# 2. Create Build folder and clone openCV repo
mkdir ~/opencv_build && cd ~/opencv_build

git clone https://github.com/opencv/opencv.git
cd opencv
git checkout 3.4
cd ..

git clone https://github.com/opencv/opencv_contrib.git
cd opencv_contrib
git checkout 3.4
cd ..

# 3. Build openCV
# INFO: CMAKE_INSTALL_PREFIX zu usr/local setzen, sonst in CMakeList.txt paths setzen.
cd ~/opencv_build/opencv
mkdir build && cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_C_EXAMPLES=ON \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D OPENCV_GENERATE_PKGCONFIG=ON \
	-D WITH_V4L=ON \
	-D WITH_OPENGL=ON \
	-D WITH_OPENCL=ON\
	-D WITH_QT=ON \
	-D OPENCV_ENABLE_NONFREE=ON \
	-D OPENCV_EXTRA_MODULES_PATH=/home/rosmatch/catkin_ws_D435/opencv_build/opencv_contrib/modules \
	-D BUILD_EXAMPLES=ON ..


# check number of kernels with
nproc
make -j4

# install openCV
sudo make install

# Verify install
pkg-config --modversion opencv
python3 -c "import cv2; print(cv2.__version__)"

########################
### create catkin_ws ###
########################
mkdir catkin_ws_hartmann
cd catkin_ws_hartmann
mkdir src
catkin_make
echo "source ~/catkin_ws_hartmann/devel/setup.bash" >> ~/.bashrc
source ~/catkin_ws_hartmann/devel/setup.bash

####################################
### LibRealSense and ROS Wrapper ###
####################################
# use stable LibRealSense v2.40.0 and therefore ROS Wrapper 2.0 (build 2.2.20) 
### FIRST: Install LibRealSense v2.40.0
# Version needs to fit to Kernel v5.4.15
# Follow instructions here
https://github.com/IntelRealSense/librealsense/blob/master/doc/installation.md
# BUT download correct .zip version v2.40.0 (# aae6f31) under Assets from here
https://github.com/IntelRealSense/librealsense/releases/

sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade
cd catkin_ws_hartmann
# copy downloaded and unziped librealsense folder here

cd librealsense
sudo apt-get install git libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev
sudo apt-get install libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev at
./scripts/setup_udev_rules.sh
./scripts/patch-realsense-ubuntu-lts.sh
mkdir build && cd build
cmake ../ -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=true -DBUILD_CV_EXAMPLES=true -DBUILD_SHARED_LIBS=ON
make -j4
sudo make install

	
### SECOND: Install realsense-ros-2.2.20 wrapper (Hash fbbb1a7)
# librealsense must be installed already
# open https://github.com/IntelRealSense/realsense-ros/releases
# Under Assets download the zip and unzip it
# Save the folder in your catkin_ws/src
# this package must be installed as well
sudo apt install ros-melodic-ddynamic-reconfigure

###############################
### Realsense Gazebo Plugin ###
###############################
# To simulate Realsense Cam in Gazebo, the Package "realsense_gazebo_plugin" is needed.
cd catkin_ws_hartmann/src
git clone -b melodic-devel https://github.com/pal-robotics/realsense_gazebo_plugin.git
catkin_make
-> This will generate a shared library called librealsense_gazebo_plugin.so

############################################
### Check this and build single packages ###
############################################
catkin init
catkin build realsense_gazebo_plugin realsense2_camera realsense2_description
catkin build mir_actions mir_description mir_driver mir_dwb_critics mir_gazebo mir_msgs mir_navigation

# catkin build mir_vision needs VISP!
########################
### Get VISP Library ###
########################
# Follow instructions from
https://visp-doc.inria.fr/doxygen/visp-daily/tutorial-install-ubuntu.html

sudo apt-get install build-essential cmake-curses-gui git subversion wget
echo "export VISP_WS=$HOME/catkin_ws_hartmann" >> ~/.bashrc
source ~/.bashrc
mkdir -p $VISP_WS

sudo apt-get install libopencv-dev libx11-dev liblapack-dev libeigen3-dev libv4l-dev libzbar-dev libpthread-stubs0-dev libjpeg-dev libpng-dev libdc1394-22-dev

git clone https://github.com/lagadic/visp.git
mkdir -p $VISP_WS/visp-build
cd $VISP_WS/visp-build
cmake ../visp
ccmake ../visp

make -j4
# posiible error: cv::xfeatures2d::SIFT has not been declared
# -> delete 3 lines in the vpKeyPoint.cpp file as described here: 
# https://github.com/lagadic/visp/issues/759

echo "export VISP_DIR=$VISP_WS/visp-build" >> ~/.bashrc
$ source ~/.bashrc

###########################################
### clone repo object_localisation_d435 ###
###########################################
cd catkin_ws_hartmann/src
pip install rospkg
sudo apt install ros-melodic-mir-robot
sudo apt install ros-melodic-navigation

git clone https://github.com/HartmannSa/object_localisation_d435.git
sudo rosdep init
rosdep update
rosdep install --from-paths src --ignore-src -r -y	

cd ..
catkin_make






########################################################################################################
############################################
### Further information and useful links ###
############################################
### Für OpenCV:
# further openCV install instruction: https://www.learnopencv.com/install-opencv-3-4-4-on-ubuntu-18-04/
# Code from https://docs.opencv.org/2.4/doc/tutorials/introduction/linux_gcc_cmake/linux_gcc_cmake.html



########################################################################################################
###########################
### UNINSTALL Realsense ###
###########################
# Check librealsense.so versions
sudo updatedb
locate librealsense2.so

# rosmatch@rosmatch-Z370P-D3:~$ 
dpkg -l | grep "realsense" | cut -d " " -f 3 | xargs sudo dpkg --purge

##############################
### UNINSTALL Ros Packages ###
##############################
# remove is identical to install except that packages are removed. 
# Note that removing a package leaves its configuration files on the system.
# pure (=bereinigen) entfernt auch config files/ 
# is identical to remove except that packages are removed and purged 
# (any configuration files are deleted too).
sudo apt-get purge ros-melodic-visp*
OR 
sudo apt remove --purge ros-melodic-visp*

UND
dpkg -l | grep "realsense" | cut -d " " -f 3 | xargs sudo dpkg --purge

## Aufräumen von /var/cavhe/apt/archives
sudo apt clean
sudo apt autoclean





